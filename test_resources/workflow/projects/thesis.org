* Thesis
Plan to open-source later
Draw inspiration from hardware testing
** DONE Figure out which topics Martin would supervise
   CLOSED: [2016-11-06 Sun 14:33] SCHEDULED: <2016-11-09 Wed>
** CANCELLED have the meeting with martin
   CLOSED: [2016-11-11 Fri 07:44] SCHEDULED: <2016-11-09 Wed>
** DONE for a response from Prof Basin
   CLOSED: [2016-11-21 Mon 12:56]
** DONE for a response from Prof Mueller
   CLOSED: [2016-11-21 Mon 12:57]
** DONE get another reply from Martin
   CLOSED: [2016-12-02 Fri 02:26]
** CANCELLED for a response from Prof Pueschel
   CLOSED: [2016-12-02 Fri 02:26]
** DONE have a meeting with David Basin
   CLOSED: [2016-12-08 Thu 11:55]
** DONE Find Prof. Vechev and talk to him about thesis
   CLOSED: [2016-12-12 Mon 13:54]
** DONE for my ASL results.
   CLOSED: [2017-01-24 Tue 11:14]
** DONE Create a repository for a thesis proposal
   CLOSED: [2017-01-24 Tue 22:55]
** DONE look at other thesis proposals
   CLOSED: [2017-01-25 Wed 09:26]
** DONE figure out what I need for a thesis proposal
   CLOSED: [2017-01-25 Wed 02:30]

- The goal:
    A taste of research

    - Doable kernel
    - Challenging aspecs
    - Eventually potentially publishable

    Get this in the repo: https://www.inf.ethz.ch/content/dam/ethz/special-interest/infk/department/Education/Master-s-Tracks-and-Focus-Areas/Forms---Documents/Master-Studies-Documents/Merkblatt_MSc_Thesis_E.pdf
    also ensure that I get the right date's version and that I notice when it changes.

- Introduction / Motivation
- Assignment
  - Objective
  - Tasks
  - Deliverables
- References
** DONE make a 2 page thesis proposal, point out similarities and differences with current research
   CLOSED: [2017-01-25 Wed 09:26]
** DONE get feedback from Nick
   CLOSED: [2017-01-27 Fri 21:52]
** DONE get feedback from Xavier
   CLOSED: [2017-01-27 Fri 21:52]
** DONE think about doing an industry thesis
   CLOSED: [2017-01-27 Fri 21:52]

** DONE Ideas
   CLOSED: [2017-01-27 Fri 21:52]
If we have polymorphic functions, then unit testing is enough.
If we have monomorphic functions, then property-testing can be type-guided.
For example, a value of type B can be split up into a function (A -> B) and a value A for any type A.
** DONE Send the proposal to Dmitriy and david and martin.
   CLOSED: [2017-01-27 Fri 21:52]
** DONE Make a second, longer version of the thesis proposal that proposes some solutions.
   CLOSED: [2017-02-03 Fri 20:30]
** DONE Email nick .. about a quickspec/quickcheck thesis
   CLOSED: [2017-02-11 Sat 18:20]
** DONE for the papers by mum
   CLOSED: [2017-02-11 Sat 18:20]
** CANCELLED read the extra papers.
   CLOSED: [2017-02-16 Thu 12:30]
** DONE for a reply from Dmitriy
   CLOSED: [2017-02-18 Sat 12:33]
** DONE have a meeting with Dmitriy
   CLOSED: [2017-02-22 Wed 19:05]
** CANCELLED for a reply from Nick
   CLOSED: [2017-02-25 Sat 19:18]
** DONE for a reply from dmitriy about the permissions and the form.
   CLOSED: [2017-03-04 Sat 12:07]
** DONE have a look at my notes on the thesis meeting
   CLOSED: [2017-03-07 Tue 11:02]
** DONE register my thesis on mystudies
   CLOSED: [2017-03-09 Thu 08:35] SCHEDULED: <2017-03-08 Wed>
** CANCELLED read the sledgehammer papers.
   CLOSED: [2017-03-09 Thu 20:21]
Specifically: a leraning based fact selector, but the MEPO part.
** DONE download the sources I know of that are relevant
   CLOSED: [2017-03-09 Thu 20:21]
** DONE figure out the output format of quickspec's discovered properties
   CLOSED: [2017-03-10 Fri 10:16]
https://hackage.haskell.org/package/QuickCheck-2.9.2/docs/Test-QuickCheck.htmlA

Aha, it's an 'Equation': https://hackage.haskell.org/package/quickspec-0.9.6/docs/Test-QuickSpec-Equation.html#t:Equation
We could also use 'TypedEquation' there, if we need to be able to talk about types.
The 'Term's in an equation are a custom type, not GHC internals: https://hackage.haskell.org/package/quickspec-0.9.6/docs/Test-QuickSpec-Term.html#t:Term
** DONE Read the sledgehammer papers
   CLOSED: [2017-03-10 Fri 17:28]

- mash2

I like these ideas:
Zero config, zero click, zero maintenance, zero overhead,

However, I think config should be optional, not omitted

I'm specifically looking at the MePo part because the rest is ML.
Maybe ML will come in handy later, but let's look at that once we have something simpler set up.

** DONE Set up a framework for easyspec
   CLOSED: [2017-03-10 Fri 18:27]
** DONE set up a command that works with 'easyspec discover File.hs function'
   CLOSED: [2017-03-10 Fri 20:13]
We'll get to usability later. Let's just get this up and running for now.
** DONE print all functions that are in scope, with the GHC API
   CLOSED: [2017-03-10 Fri 22:38]
   :LOGBOOK:
   CLOCK: [2017-03-10 Fri 20:00]--[2017-03-10 Fri 22:38] =>  2:38
   :END:
** CANCELLED for a response on my stackoverflow question
   CLOSED: [2017-03-11 Sat 11:30]
** DONE print out types and names of all in-scope functions
   CLOSED: [2017-03-11 Sat 11:30]
** DONE generate a signature for quickspec from the entire scope.
   CLOSED: [2017-03-13 Mon 14:20]
** DONE add dmitriy to my thesis repo
   CLOSED: [2017-03-13 Mon 14:20]
** DONE Refactor the code so that my eyes don't bleed when I look at it   :q:
   CLOSED: [2017-03-15 Wed 12:53]
** CANCELLED get easyspec to find laws when I execute it on Monomorphic.hs
   CLOSED: [2017-03-15 Wed 12:53]
** CANCELLED Start using the latest quickspec version
   CLOSED: [2017-03-16 Thu 08:35]
** CANCELLED 03-15 Thesis meeting
   CLOSED: [2017-03-16 Thu 09:23] SCHEDULED: <2017-03-15 Wed>
Agenda:
- What license do we use?
** DONE Start using the latest quickspec version
   CLOSED: [2017-03-16 Thu 12:37]
** CANCELLED for a response from Dmitriy about the quicspec version
   CLOSED: [2017-03-16 Thu 12:37]
** DONE for a response from the stack team about the unnecessary rebuilds
   CLOSED: [2017-03-16 Thu 23:41]
** DONE Refactor out the need for funX
   CLOSED: [2017-03-16 Thu 14:06]
** DONE make inference generate variables of relevant input types
   CLOSED: [2017-03-16 Thu 14:20]
This was done by the upgrade, cool!
** DONE fix zifter-stack to not rebuild dependencies that aren't really dependencies with --pedantic. (like quickspec here)
   CLOSED: [2017-03-17 Fri 09:28]
** DONE get the easyspec zift script to succeed again
   CLOSED: [2017-03-17 Fri 09:28]
** DONE make signature generation work for functions with multiple type variables
   CLOSED: [2017-03-18 Sat 10:09]
** DONE Send an email to the gHC mailing list about the show instances
   CLOSED: [2017-03-18 Sat 14:23]
   - State "WAITING"    from "NEXT"       [2017-03-18 Sat 14:23]
** DONE make signature generation work for functions with Ord constraints
   CLOSED: [2017-03-18 Sat 14:44]
** DONE consider making a GHC compat layer to parse the tc output into, then go from there with clean types.
   CLOSED: [2017-03-18 Sat 15:03]
** CANCELLED have a look through the quickspec api. Maybe we can use their types?
   CLOSED: [2017-03-18 Sat 15:03]
It doesn't look like it.
** DONE for replies on the GHC question
   CLOSED: [2017-03-19 Sun 21:46]
   - State "WAITING"    from "TODO"       [2017-03-18 Sat 15:03]
** DONE for a response frem dmitriy about the ghc compat layer
   CLOSED: [2017-03-22 Wed 14:52]
   - State "WAITING"    from "TODO"       [2017-03-18 Sat 15:03]
** DONE start on a document. I'd like to use HaTeX, but I'm not sure if it's a good idea.
   CLOSED: [2017-03-20 Mon 11:35]
I won't use HaTeX, but I'll use some of my own checkers nonetheless.
They'll operate on text only and be deactivated with self-made latex pragma's or something.
** CANCELLED figure out which sections need to go into a thesis
   CLOSED: [2017-03-20 Mon 13:23]
Introduction
** DONE for dmitriy to send me some example theses.
   CLOSED: [2017-03-22 Wed 14:52]
** CANCELLED send dmitriy an email about scheduling the thesis meeting
   CLOSED: [2017-03-23 Thu 13:26]
   - State "CANCELLED"  from "DONE"       [2017-03-23 Thu 13:26]
   - State "DONE"       from "NEXT"       [2017-03-23 Thu 13:26]
maybe try not to have the meeting or maybe just not this week.
** DONE set up a basic document with Î›TeX
   CLOSED: [2017-03-23 Thu 15:55]
   - State "DONE"       from "NEXT"       [2017-03-23 Thu 15:55]
** DONE embed the ETH logo
   CLOSED: [2017-03-24 Fri 21:32]
   - State "DONE"       from "NEXT"       [2017-03-24 Fri 21:32]
** DONE add the sources (references)
   CLOSED: [2017-03-24 Fri 23:03]
   - State "DONE"       from "NEXT"       [2017-03-24 Fri 23:03]
** DONE add the parts of my previous proposal that I can use.
   CLOSED: [2017-03-25 Sat 19:27]
   - State "DONE"       from "NEXT"       [2017-03-25 Sat 19:27]
Don't be afraid to add to much. It's easy to remove things
** DONE add all possible relevant sources, use nocite to already show them in the pdf.
   CLOSED: [2017-03-25 Sat 19:54]
   - State "DONE"       from "NEXT"       [2017-03-25 Sat 19:54]
** DONE add a watermark to the thesis draft version
   CLOSED: [2017-03-25 Sat 20:12]
   - State "DONE"       from "TODO"       [2017-03-25 Sat 20:12]
** NEXT make a compatibility layer for the GHC api
I think I want to use the haskell-src-exts Type:
https://hackage.haskell.org/package/haskell-src-exts-1.17.1/docs/Language-Haskell-Exts-Syntax.html#t:Type
** TODO use aspell or ispell on my thesis with a custom dictionary, in the 's' function?
** TODO Modify the build system so there is a flag to generate the final version as well.
** TODO print the declaration of originality                   :print:campus:
** TODO sign the declaration of originality
** TODO embed the declaration of originality
** TODO Thesis meeting:
** TODO make signature generation work with higher-order type variables
** TODO make signature generation work for functions with Foldable constraints
** TODO make signature inference for constant values of small-scale data types.
** TODO have a look at the intero ghci fork.
https://github.com/alanz/haskell-ide-engine/
** TODO have a look at ghc describe to see if I can integrate with ghci (see link below)
https://github.com/commercialhaskell/describe
** TODO build the easyspec in parallel with literature studies: start by creating the easyspec repo.
** TODO have a seperate repo for easyspec and for my thesis, add dmitriy to my thesis repo.
** TODO format sources with biber
** TODO put in thesis: 
Kheb ergens op gestudeerd en nu ga ik mijn vertellingske doen.
* Reference/Ideas
relevance filtering (the paper) may be important.

From Bartosh:
- Generating good distributions is hard, most test explore the same code path

